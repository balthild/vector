import Element from './Element.js';
import SVG from '../SVG.js';
//Make the function static and extend from Line
/**
* Creates a line connecting two edges, with an arrow if directed.
*/
export default class Edge extends Element {
    /**
    * Constructs a line frmo the edge of the two circle elements.
    */
    constructor(nodeFrom, nodeTo, directed) {
        super();
        let arr = this.calculateLinePosition(nodeFrom, nodeTo);
        this.root = SVG.Line(arr[0], arr[1], arr[2], arr[3]);
        this.root.id = this.id;
        this.style = this.root.style;
    }
    /**
    * Function to find where the line connecting two circles should go. return an Array
    * containing [x1, y1, x2, y2] of the line.
    */
    calculateLinePosition(nodeFrom, nodeTo) {
        let y1 = nodeFrom.nodeCircle.cy;
        let y2 = nodeTo.nodeCircle.cy;
        let x1 = nodeFrom.nodeCircle.cx;
        let x2 = nodeTo.nodeCircle.cx;
        let deltaY = y2 - y1;
        let deltaX = x2 - x1;
        let L = Math.sqrt((deltaX * deltaX) + (deltaY * deltaY));
        let r1Lx = nodeFrom.nodeCircle.r / L * deltaX;
        let r1Ly = nodeFrom.nodeCircle.r / L * deltaY;
        let r2Lx = nodeTo.nodeCircle.r / L * deltaX;
        let r2Ly = nodeTo.nodeCircle.r / L * deltaY;
        let y1Prime = y1 + r1Ly;
        let y2Prime = y2 - r2Ly;
        let x1Prime = x1 + r1Lx;
        let x2Prime = x2 - r2Lx;
        return new Array(x1Prime, y1Prime, x2Prime, y2Prime);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRWRnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NvdXJjZS9lbGVtZW50cy9FZGdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sT0FBTyxNQUFNLGNBQWMsQ0FBQztBQUNuQyxPQUFPLEdBQUcsTUFBTSxXQUFXLENBQUM7QUFFNUIsK0NBQStDO0FBRS9DOztFQUVFO0FBQ0YsTUFBTSxDQUFDLE9BQU8sT0FBTyxJQUFLLFNBQVEsT0FBTztJQU12Qzs7TUFFRTtJQUNGLFlBQVksUUFBYyxFQUFFLE1BQVksRUFBRSxRQUFpQjtRQUN6RCxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFFdkQsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3JELElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUMvQixDQUFDO0lBRUQ7OztNQUdFO0lBQ0YscUJBQXFCLENBQUMsUUFBYyxFQUFFLE1BQVc7UUFFL0MsSUFBSSxFQUFFLEdBQUcsUUFBUSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUM7UUFDaEMsSUFBSSxFQUFFLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUM7UUFFOUIsSUFBSSxFQUFFLEdBQUcsUUFBUSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUM7UUFDaEMsSUFBSSxFQUFFLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUM7UUFFOUIsSUFBSSxNQUFNLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQztRQUNyQixJQUFJLE1BQU0sR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDO1FBRXJCLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUV6RCxJQUFJLElBQUksR0FBRyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsTUFBTSxDQUFDO1FBQzlDLElBQUksSUFBSSxHQUFHLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxNQUFNLENBQUM7UUFFOUMsSUFBSSxJQUFJLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLE1BQU0sQ0FBQztRQUM1QyxJQUFJLElBQUksR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsTUFBTSxDQUFDO1FBRzVDLElBQUksT0FBTyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFDeEIsSUFBSSxPQUFPLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQztRQUV4QixJQUFJLE9BQU8sR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBQ3hCLElBQUksT0FBTyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFFeEIsT0FBTyxJQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN2RCxDQUFDO0NBQ0YifQ==