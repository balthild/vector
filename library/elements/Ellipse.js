import SVG from '../SVG.js';
import Element from './Element.js';
export default class Ellipse extends Element {
    /**
    * Constructs a rectangle element at the position (x,y)
    */
    constructor(cx, cy, rx, ry) {
        super();
        this.root = SVG.Ellipse(cx, cy, rx, ry);
        this.root.id = this.id;
    }
    get fill() {
        return this.root.style.fill;
    }
    set fill(s) {
        this.root.style.fill = s;
    }
    get stroke() {
        return this.root.style.stroke;
    }
    set stroke(s) {
        this.root.style.stroke = s;
    }
    /**
    * Returns the x position of the rectangle
    */
    get cx() {
        return this.root.cx.baseVal.value;
    }
    /**
    * Sets the x position of the rectangle
    */
    set cx(n) {
        this.root.cx.baseVal.value = n;
    }
    /**
    * Returns the y position of the rectangle
    */
    get cy() {
        return this.root.cy.baseVal.value;
    }
    /**
    * Sets the y position of the rectangle
    */
    set cy(n) {
        this.root.cy.baseVal.value = n;
    }
    /**
    * Returns the width of the rectangle
    */
    get rx() {
        return this.root.rx.baseVal.value;
    }
    /**
    * Sets the width of the rectangle
    */
    set rx(n) {
        this.root.rx.baseVal.value = n;
    }
    /**
    * Returns the height of the rectangle
    */
    get ry() {
        return this.root.ry.baseVal.value;
    }
    /**
    * Sets the height of the rectangle
    */
    set ry(n) {
        this.root.ry.baseVal.value = n;
    }
    translate(x, y) {
        this.root.cx.baseVal.value = this.root.cx.baseVal.value + x;
        this.root.cy.baseVal.value = this.root.cy.baseVal.value + y;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRWxsaXBzZS5qcyIsInNvdXJjZVJvb3QiOiIuL3NvdXJjZS8iLCJzb3VyY2VzIjpbImVsZW1lbnRzL0VsbGlwc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxHQUFHLE1BQU0sV0FBVyxDQUFDO0FBQzVCLE9BQU8sT0FBTyxNQUFNLGNBQWMsQ0FBQztBQUduQyxNQUFNLENBQUMsT0FBTyxPQUFPLE9BQVEsU0FBUSxPQUFPO0lBSTNDOztNQUVFO0lBQ0YsWUFBYSxFQUFTLEVBQUUsRUFBUyxFQUFFLEVBQVMsRUFBRSxFQUFTO1FBQ3JELEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDO0lBQzlCLENBQUM7SUFFRCxJQUFJLElBQUksQ0FBQyxDQUFRO1FBQ2YsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRUQsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7SUFDaEMsQ0FBQztJQUVELElBQUksTUFBTSxDQUFDLENBQVM7UUFDbEIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBRUQ7O01BRUU7SUFDRixJQUFJLEVBQUU7UUFDSixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7SUFDcEMsQ0FBQztJQUVEOztNQUVFO0lBQ0YsSUFBSSxFQUFFLENBQUUsQ0FBUTtRQUNkLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRDs7TUFFRTtJQUNGLElBQUksRUFBRTtRQUNKLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztJQUNwQyxDQUFDO0lBRUQ7O01BRUU7SUFDRixJQUFJLEVBQUUsQ0FBRSxDQUFRO1FBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVEOztNQUVFO0lBQ0YsSUFBSSxFQUFFO1FBQ0osT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO0lBQ3BDLENBQUM7SUFFRDs7TUFFRTtJQUNGLElBQUksRUFBRSxDQUFFLENBQVE7UUFDZCxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRUQ7O01BRUU7SUFDRixJQUFJLEVBQUU7UUFDSixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7SUFDcEMsQ0FBQztJQUVEOztNQUVFO0lBQ0YsSUFBSSxFQUFFLENBQUUsQ0FBUTtRQUNkLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRCxTQUFTLENBQUMsQ0FBUSxFQUFFLENBQVE7UUFDMUIsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUM1RCxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO0lBQzlELENBQUM7Q0FDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTVkcgZnJvbSAnLi4vU1ZHLmpzJztcbmltcG9ydCBFbGVtZW50IGZyb20gJy4vRWxlbWVudC5qcyc7XG5cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRWxsaXBzZSBleHRlbmRzIEVsZW1lbnQge1xuXG4gcm9vdDogU1ZHRWxsaXBzZUVsZW1lbnQ7XG5cbiAvKipcbiAqIENvbnN0cnVjdHMgYSByZWN0YW5nbGUgZWxlbWVudCBhdCB0aGUgcG9zaXRpb24gKHgseSlcbiAqL1xuIGNvbnN0cnVjdG9yKCBjeDpudW1iZXIsIGN5Om51bWJlciwgcng6bnVtYmVyLCByeTpudW1iZXIgKSB7XG4gICBzdXBlcigpO1xuICAgdGhpcy5yb290ID0gU1ZHLkVsbGlwc2UoY3gsIGN5LCByeCwgcnkpO1xuICAgdGhpcy5yb290LmlkID0gdGhpcy5pZDtcbiB9XG5cbiBnZXQgZmlsbCgpIDogc3RyaW5ne1xuICAgcmV0dXJuIHRoaXMucm9vdC5zdHlsZS5maWxsO1xuIH1cblxuIHNldCBmaWxsKHM6c3RyaW5nKXtcbiAgIHRoaXMucm9vdC5zdHlsZS5maWxsID0gcztcbiB9XG5cbiBnZXQgc3Ryb2tlKCkgOiBzdHJpbmd7XG4gICByZXR1cm4gdGhpcy5yb290LnN0eWxlLnN0cm9rZTtcbiB9XG5cbiBzZXQgc3Ryb2tlKHM6IHN0cmluZyl7XG4gICB0aGlzLnJvb3Quc3R5bGUuc3Ryb2tlID0gcztcbiB9XG5cbiAvKipcbiAqIFJldHVybnMgdGhlIHggcG9zaXRpb24gb2YgdGhlIHJlY3RhbmdsZVxuICovXG4gZ2V0IGN4KCkgOiBudW1iZXIge1xuICAgcmV0dXJuIHRoaXMucm9vdC5jeC5iYXNlVmFsLnZhbHVlO1xuIH1cblxuIC8qKlxuICogU2V0cyB0aGUgeCBwb3NpdGlvbiBvZiB0aGUgcmVjdGFuZ2xlXG4gKi9cbiBzZXQgY3goIG46bnVtYmVyICkge1xuICAgdGhpcy5yb290LmN4LmJhc2VWYWwudmFsdWUgPSBuO1xuIH1cblxuIC8qKlxuICogUmV0dXJucyB0aGUgeSBwb3NpdGlvbiBvZiB0aGUgcmVjdGFuZ2xlXG4gKi9cbiBnZXQgY3koKTpudW1iZXIge1xuICAgcmV0dXJuIHRoaXMucm9vdC5jeS5iYXNlVmFsLnZhbHVlO1xuIH1cblxuIC8qKlxuICogU2V0cyB0aGUgeSBwb3NpdGlvbiBvZiB0aGUgcmVjdGFuZ2xlXG4gKi9cbiBzZXQgY3koIG46bnVtYmVyKXtcbiAgIHRoaXMucm9vdC5jeS5iYXNlVmFsLnZhbHVlID0gbjtcbiB9XG5cbiAvKipcbiAqIFJldHVybnMgdGhlIHdpZHRoIG9mIHRoZSByZWN0YW5nbGVcbiAqL1xuIGdldCByeCgpIDogbnVtYmVyIHtcbiAgIHJldHVybiB0aGlzLnJvb3QucnguYmFzZVZhbC52YWx1ZTtcbiB9XG5cbiAvKipcbiAqIFNldHMgdGhlIHdpZHRoIG9mIHRoZSByZWN0YW5nbGVcbiAqL1xuIHNldCByeCggbjpudW1iZXIgKSB7XG4gICB0aGlzLnJvb3QucnguYmFzZVZhbC52YWx1ZSA9IG47XG4gfVxuXG4gLyoqXG4gKiBSZXR1cm5zIHRoZSBoZWlnaHQgb2YgdGhlIHJlY3RhbmdsZVxuICovXG4gZ2V0IHJ5KCkgOiBudW1iZXIge1xuICAgcmV0dXJuIHRoaXMucm9vdC5yeS5iYXNlVmFsLnZhbHVlO1xuIH1cblxuIC8qKlxuICogU2V0cyB0aGUgaGVpZ2h0IG9mIHRoZSByZWN0YW5nbGVcbiAqL1xuIHNldCByeSggbjpudW1iZXIgKSB7XG4gICB0aGlzLnJvb3QucnkuYmFzZVZhbC52YWx1ZSA9IG47XG4gfVxuXG4gdHJhbnNsYXRlKHg6bnVtYmVyLCB5Om51bWJlcil7XG4gICB0aGlzLnJvb3QuY3guYmFzZVZhbC52YWx1ZSA9IHRoaXMucm9vdC5jeC5iYXNlVmFsLnZhbHVlICsgeDtcbiAgIHRoaXMucm9vdC5jeS5iYXNlVmFsLnZhbHVlID0gdGhpcy5yb290LmN5LmJhc2VWYWwudmFsdWUgKyB5O1xuIH1cbn1cbiJdfQ==